{"version":3,"sources":["Components/Filter/Filter.jsx","Components/ContactForm/ContactForm.jsx","fields.js","Components/ContactListItem/ContactListItem.jsx","phonebook.jsx","App.js","index.js"],"names":["Filter","searchInputId","value","onChange","v4","id","type","nameInput","name","pattern","title","required","numberInput","Form","state","number","handleChange","target","setState","onSubmit","event","preventDefault","props","resetForm","nameInputId","phoneInputId","this","action","htmlFor","Component","ContactList","contacts","onDelete","map","index","onClick","Phonebook","filter","changeFilter","addContact","newContact","prevState","find","profile","alert","newContacts","push","deleteContact","idx","_","contact","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","normalizedFilter","toLowerCase","filterContacts","includes","ContactForm","length","ContactListItem","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20d2d7c8.chunk.js","sourcesContent":["import { findDOMNode } from \"react-dom\";\r\nimport { v4 } from \"uuid\";\r\n\r\nconst Filter = ({ searchInputId, value, onChange }) => {\r\n  searchInputId = v4()\r\n  return (\r\n    <>\r\n      <label />Search<label/>\r\n    <input id={searchInputId}\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChange}/>\r\n    </>\r\n  )\r\n  \r\n}\r\nexport default Filter","import React, { Component } from 'react';\r\nimport { v4 } from \"uuid\";\r\nimport {fields} from '../../fields'\r\nconst {nameInput,numberInput} = fields\r\n\r\nclass Form extends Component{\r\n  state = {\r\n    name: '',\r\n    number: ''\r\n  }\r\n    handleChange = ({target}) => {\r\n    this.setState({\r\n      [target.name]:target.value\r\n   })\r\n  }\r\n  resetForm(){\r\n        this.setState({\r\n          name: \"\",\r\n          number:\"\"\r\n        })\r\n  }\r\n  onSubmit = (event) => {\r\n    event.preventDefault()\r\n    const { onSubmit } = this.props;\r\n    onSubmit(this.state)\r\n    this.resetForm()\r\n  }\r\n  nameInputId = v4()\r\n  phoneInputId = v4()\r\n  render() {\r\n    const { onSubmit,handleChange } = this\r\n    return (\r\n      <>\r\n        <form action=\"submit\" onSubmit={onSubmit}>\r\n        <label htmlFor={this.nameInputId}>Name </label>\r\n          < input onChange={handleChange}\r\n            id={this.nameInputId}\r\n            type={nameInput.type}\r\n            name={nameInput.name}\r\n            value={this.state.name}\r\n            pattern={nameInput.pattern}\r\n            title={nameInput.title}\r\n            required={nameInput.required}\r\n          />\r\n          <br/>\r\n          <label htmlFor={this.phoneInputId}>Number</label>\r\n          <input onChange={handleChange}\r\n            id={this.phoneInputId}\r\n            type={numberInput.type}\r\n            value={this.state.number}\r\n            name={numberInput.name}\r\n            pattern={numberInput.pattern}\r\n            title={numberInput.title}\r\n            required={numberInput.required}/>\r\n          <br/>\r\n          <button type=\"submit\" >Add Contact</button>\r\n        </form>\r\n        </>\r\n    )\r\n  }\r\n}\r\nexport default Form","export const fields = {\r\n  nameInput: {\r\n    type:\"text\",\r\n    name:\"name\",\r\n    pattern:\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\r\n    title:\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\",\r\n    required:true,\r\n  },\r\n  numberInput: {\r\n  type:\"tel\",\r\n  name:\"number\",\r\n  pattern:\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\",\r\n  title:\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\",\r\n  required:true\r\n  }\r\n} ","import { v4 } from \"uuid\";\r\nimport React from 'react';\r\nconst ContactList = ({ contacts, onDelete }) => {\r\n       \r\n  const contact = contacts.map(({ name,number }, index) => {\r\n    return (<li key={v4()}>\r\n      {name}: { number}\r\n      <button onClick={() => onDelete(index)}>x</button></li>)\r\n    })\r\n  return contact\r\n}\r\nexport default ContactList;\r\n","import React, { Component } from 'react';\r\nimport { v4 } from \"uuid\";\r\nimport Filter from './Components/Filter/Filter'\r\nimport ContactForm from './Components/ContactForm/ContactForm'\r\nimport ContactListItem from './Components/ContactListItem/ContactListItem'\r\nclass Phonebook extends Component {\r\n  state = {\r\n    contacts: [\r\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\r\n  ],\r\n  filter: '',\r\n  }\r\n  componentDidMount() {\r\n    const contact = localStorage.getItem('contacts')\r\n    const newContacts = JSON.parse(contact)\r\n    this.setState(({ contacts }) => {\r\n      return {\r\n        contacts:newContacts\r\n      }\r\n    })\r\n  }\r\n  componentDidUpdate(prevProps,prevState) {\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      localStorage.setItem('contacts',JSON.stringify(this.state.contacts))\r\n    }\r\n  }\r\n  changeFilter = ({target}) => {\r\n    this.setState({ filter: target.value })\r\n  }\r\n\r\n  addContact = (newContact) => {\r\n   \r\n    this.setState(prevState => {\r\n      const { contacts } = prevState;\r\n      const result = contacts.find(profile => profile.name === newContact.name);\r\n      if (result) {\r\n        alert(`${newContact.name} are already in list`)\r\n        return {\r\n          contacts\r\n        }\r\n      }\r\n      const newContacts = [...contacts];\r\n      newContact.id = v4();\r\n      newContacts.push(newContact);\r\n      return {\r\n        contacts: newContacts\r\n      }\r\n    })\r\n    \r\n  }\r\n  \r\n  deleteContact = (idx) => {\r\n    this.setState(prevState => ({\r\n      contacts:prevState.contacts.filter((_, index) => index !== idx)\r\n    }))\r\n  }\r\n  render() {\r\n    const { addContact,deleteContact,changeFilter } = this\r\n    const normalizedFilter = this.state.filter.toLowerCase()\r\n    const filterContacts = this.state.contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter))\r\n    return (\r\n      <>\r\n        <ContactForm onSubmit={addContact} />\r\n        <h2>Contacts</h2>\r\n        <Filter onChange={changeFilter} value={this.state.filter}></Filter>\r\n        <div>\r\n          <ul>\r\n            {this.state.contacts.length ? <ContactListItem contacts={filterContacts} onDelete ={deleteContact}/> : <p>There is no contact here</p>}\r\n          </ul>\r\n        </div>\r\n       \r\n    </>\r\n    )\r\n  }\r\n}\r\nexport default Phonebook\r\n","import Phonebok from './phonebook'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Phonebok />\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}